{"version":3,"sources":["fBase.js","component/AuthForm.js","routes/Auth.js","component/Nweet.js","component/NweetFactory.js","routes/Home.js","component/Navigation.js","routes/profile.js","component/router.js","component/App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","console","log","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","update","autoFocus","alt","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","userId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","Object","assign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAeAA,gBAVqB,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAmBR,EAEnBS,EAAcT,SAEdU,EAAYV,cAEZW,EAAiBX,Y,eCqCfY,EAzDC,WAAK,IAAD,EAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIiBJ,oBAAS,GAJ1B,mBAIZK,EAJY,KAIAC,EAJA,OAKON,mBAAS,IALhB,mBAKZO,EALY,KAKLC,EALK,KASVC,EAAW,SAACC,GAAU,IAAD,EACCA,EAAvBC,OAAQC,EADc,EACdA,KAAKC,EADS,EACTA,MACT,UAARD,EACFV,EAASW,GACM,aAAPD,GACRR,EAAYS,IAKLC,EAAQ,uCAAG,WAAMJ,GAAN,eAAAK,EAAA,yDACnBL,EAAMM,iBADa,UAKfX,EALe,gCAOLT,EAAYqB,+BAA+BhB,EAAOE,GAP7C,OAOjBe,EAPiB,OAQhBC,QAAQC,IAAIF,GARI,wCAWJtB,EAAYyB,2BAA2BpB,EAAME,GAXzC,QAWjBe,EAXiB,OAYjBC,QAAQC,IAAIF,GAZK,QAclBC,QAAQC,IAAIF,GAdM,kDAgBlBV,EAAS,KAAMc,SAhBG,0DAAH,sDAwBd,OAAO,oCACC,0BAAMR,SAAUA,EAAUS,UAAU,aAC5B,2BAAOA,UAAU,YAAYX,KAAK,QAAQY,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACb,MAAOZ,EAAOQ,SAAUA,IAC3G,2BAAOc,UAAU,YAAYX,KAAK,WAAWY,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACb,MAAOV,EAAUM,SAAUA,IACxH,2BAAOc,UAAU,uBAAuBC,KAAK,SAASX,MAAOR,EAAa,iBAAmB,aAEjG,0BAAMsB,QAVI,WACxBrB,GAAc,SAACsB,GAAD,OAAUA,MASoBL,UAAU,cACnClB,EAAa,WAAa,kBAE9BE,GAAS,0BAAMgB,UAAU,aAAahB,KCbxCsB,EApCF,WAEZ,IAAMC,EAAa,uCAAG,WAAMpB,GAAN,iBAAAK,EAAA,6DACrBI,QAAQC,IAAIV,EAAMC,OAAOC,MAKd,YAHAA,EACPF,EADHC,OAAUC,MAIVmB,EAAW,IAAIpC,EAAiBqC,KAAKC,mBAEtB,WAARrB,IACPmB,EAAW,IAAIpC,EAAiBqC,KAAKE,oBAVjB,SAYftC,EAAYuC,gBAAgBJ,GAZb,2CAAH,sDAenB,OACC,yBAAKR,UAAU,iBACf,kBAAC,IAAD,CACCa,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEvB,kBAAC,EAAD,MACA,yBAAKlB,UAAU,YACR,4BAAQI,QAASG,EAAelB,KAAK,SAASW,UAAU,WAAxD,wBACL,kBAAC,IAAD,CAAiBa,KAAMM,OAExB,4BAAQf,QAASG,EAAelB,KAAK,SAASW,UAAU,WAAxD,uBACC,kBAAC,IAAD,CAAiBa,KAAMO,U,gBC+BbC,EA/DD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,QAAY,EAEP9C,oBAAS,GAFF,mBAE9B+C,EAF8B,KAErBC,EAFqB,OAGNhD,mBAAS6C,EAASI,MAHZ,mBAG9BC,EAH8B,KAGrBC,EAHqB,KAI/BC,EAAgB,WACrBJ,GAAW,SAACpB,GAAD,OAASA,MAIfyB,EAAa,uCAAE,4BAAAtC,EAAA,yDACduC,EAAKC,OAAOC,QAAQ,+CAC1BrC,QAAQC,IAAIkC,GACZnC,QAAQC,IAAI,SACTkC,EAJiB,gCAKbzD,EAAU4D,IAAV,iBAAwBZ,EAASa,KAAMC,SAL1B,uBAMb7D,EAAe8D,WAAWf,EAASgB,eAAeF,SANrC,2CAAF,qDAUb7C,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,6DAChBL,EAAMM,iBADU,SAEVnB,EAAU4D,IAAV,iBAAwBZ,EAASa,KAAMI,OAAO,CACnDb,KAAKC,IAHU,OAKhBF,GAAW,GALK,2CAAH,sDAad,OACA,yBAAKzB,UAAU,SACbwB,EACD,6BACC,0BAAMjC,SAAUA,EAAUS,UAAU,uBACnC,2BAAOA,UAAU,YAAYd,SAXf,SAACC,GAAU,IACZG,EACdH,EADKC,OAASE,MAEhBsC,EAAYtC,IAQwCA,MAAOqC,EAAUzB,YAAY,kBAAkBC,UAAQ,EAACqC,WAAS,IAClH,2BAAOvC,KAAK,SAASX,MAAM,eAAeU,UAAU,aAErD,0BAAMI,QAASyB,EAAe7B,UAAU,qBAAxC,WAID,oCACC,4BAAKsB,EAASI,MACbJ,EAASgB,eAAiB,yBAAKG,IAAI,GAAGC,IAAKpB,EAASgB,gBACpDf,GACA,yBAAKoB,MAAM,kBACX,0BAAMvC,QAAS0B,GACd,kBAAC,IAAD,CAAiBjB,KAAM+B,OAExB,0BAAMxC,QAASyB,GACd,kBAAC,IAAD,CAAiBhB,KAAMgC,W,QC6CbC,EAjGM,SAAC,GAAc,IAAbC,EAAY,EAAZA,QAAY,EACLtE,mBAAS,IADJ,mBACxBuE,EADwB,KACjBC,EADiB,OAEKxE,mBAAS,IAFd,mBAExByE,EAFwB,KAEZC,EAFY,KA4BzB5D,EAAQ,uCAAG,WAAMJ,GAAN,qBAAAK,EAAA,yDACC,KAAVwD,EADS,oDAIb7D,EAAMM,iBACF6C,EAAe,GAEF,KAAdY,EAPU,wBASPE,EAAgB7E,EAAe8E,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBATtD,SAUUJ,EAAcK,UAAUP,EAAY,YAV9C,cAUPQ,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbrB,EAXa,sBAaPhB,EAAW,CACbI,KAAKsB,EACDY,UAAWC,KAAKC,MAChBC,OAAShB,EAAQQ,IACjBjB,iBAjBK,UAmBChE,EAAU0F,WAAW,UAAUC,IAAI3C,GAnBpC,QAoBb2B,EAAS,IACTE,EAAc,IArBD,4CAAH,sDAwBd,OACI,0BAAM5D,SAAUA,EAAUS,UAAU,eACtC,yBAAKA,UAAU,2BACb,2BACEA,UAAU,sBACVV,MAAO0D,EACP9D,SAtDW,SAACC,GAAU,IAEXG,EACVH,EADCC,OAASE,MAEb2D,EAAS3D,IAmDPW,KAAK,OACLC,YAAY,uBACZgE,UAAW,MAEb,2BAAOjE,KAAK,SAASX,MAAM,SAASU,UAAU,yBAEhD,2BAAOmE,IAAI,cAAcnE,UAAU,uBACjC,4CACA,kBAAC,IAAD,CAAiBa,KAAMuD,OAGvB,2BAAOjC,GAAG,cACNlC,KAAK,OACLoE,OAAO,UACPnF,SA5DY,SAACC,GAAU,IAGrBmF,EADFnF,EADOC,OAAQmF,MAEG,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB/E,QAAQC,IAAI8E,GADqB,IAEXC,EACtBD,EADOE,cAAeD,OAEtBzB,EAAcyB,IAElBJ,EAAOM,cAAcR,IAkDjBrD,MAAO,CACP8D,QAAS,KAGZ7B,GACG,yBAAKlD,UAAU,2BACf,yBACIyC,IAAI,GACJC,IAAKQ,EACLjC,MAAO,CACP+D,gBAAiB9B,KAGrB,yBAAKlD,UAAU,qBAAqBI,QA5Eb,kBAAM+C,EAAc,MA6E3C,wCACA,kBAAC,IAAD,CAAiBtC,KAAMoE,UC9DpBC,EA5BF,SAAC,GAAe,IAAdnC,EAAa,EAAbA,QAAa,EAEItE,mBAAS,IAFb,mBAEjB0G,EAFiB,KAETC,EAFS,KAcxB,OAVAC,qBAAU,WACN/G,EAAU0F,WAAW,UAAUsB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACxD,GAAD,oBACjCC,GAAKD,EAAIC,IACND,EAAIvC,WAEXyF,EAAUI,QAEhB,IAGE,oCACA,yBAAKxF,UAAU,aACX,kBAAC,EAAD,CAAc+C,QAASA,IACvB,yBAAK9B,MAAO,CAAE0E,UAAW,KACpBR,EAAOO,KAAI,SAAC1C,GAAD,OACJ,kBAAC,EAAD,CAAO4C,IAAK5C,EAAMb,GAAIb,SAAU0B,EAAOzB,QAASyB,EAAMe,SAAWhB,EAAQQ,aCWlFsC,EA9BI,SAAC,GAAD,IAAE9C,EAAF,EAAEA,QAAF,OACf,6BACI,wBAAI9B,MAAO,CAAE6E,QAAS,OAAQC,eAAgB,SAAUJ,UAAW,KACnE,4BACI,kBAAC,IAAD,CAAMK,GAAG,IAAI/E,MAAO,CAAEgF,YAAa,KAC/B,kBAAC,IAAD,CAAiBpF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,SAGjE,4BACA,kBAAC,IAAD,CACIgF,GAAG,WACH/E,MAAO,CACPiF,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,KAGd,kBAAC,IAAD,CAAiBxF,KAAMyF,IAAQvF,MAAO,UAAWC,KAAK,OACtD,0BAAMC,MAAO,CAAE0E,UAAW,KACrB5C,EAAQwD,YAAR,UACQxD,EAAQwD,YADhB,kBAEK,gBC1BH,cAA6B,IAA3BxD,EAA0B,EAA1BA,QAASyD,EAAiB,EAAjBA,YAChBC,EAAUC,cADuB,EAEKjI,mBAASsE,EAAQwD,aAFtB,mBAEhCI,EAFgC,KAEhBC,EAFgB,KAQjCrH,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBACHsD,EAAQwD,cAAgBI,EAFd,uBAGT/G,QAAQC,IAAIkD,EAAQ8D,eAHX,SAIH9D,EAAQ8D,cAAc,CACxBN,YAAcI,IALT,OAOTH,IAPS,2CAAH,sDAkBRM,EAAW,uCAAG,4BAAAtH,EAAA,sEACKlB,EACpB0F,WAAW,UACX+C,MAAM,SAAS,KAAKhE,EAAQQ,KAC5ByD,QAAQ,aACRC,MALe,OACV9B,EADU,OAMpBvF,QAAQC,IAAIsF,EAAOM,KAAKC,KAAI,SAACxD,GAAD,OAAQA,EAAIvC,WACxCC,QAAQC,IAAI,CAACkD,YAPO,2CAAH,qDAajB,OAHAsC,qBAAU,WACNyB,OAGA,yBAAK9G,UAAU,aACX,0BAAMT,SAAUA,EAAUS,UAAU,eACpC,2BAAOd,SAvBE,SAACC,GAAU,IAEZG,EACRH,EADAC,OAAQE,MAEZsH,EAAkBtH,IAmBakD,WAAS,EAAEvC,KAAK,OAAOC,YAAY,eAAeZ,MAAOqH,EAAgB3G,UAAU,cAC9G,2BAAOC,KAAK,SAASX,MAAM,iBAAiBU,UAAU,UAClDiB,MAAO,CACH0E,UAAW,OAIvB,0BAAM3F,UAAU,2BAA2BI,QA9CzB,WAClB/B,EAAY6I,UACZT,EAAQU,KAAK,OA4Cb,aCPOC,EArCE,SAAC,GAAwC,IAAvCZ,EAAsC,EAAtCA,YAAaa,EAAyB,EAAzBA,WAAYtE,EAAa,EAAbA,QAE3C,OACC,kBAAC,IAAD,KACEsE,GAAc,kBAAC,EAAD,CAAYtE,QAASA,IACpC,kBAAC,IAAD,KACEsE,EACD,yBACApG,MAAO,CACHqG,SAAU,IACVC,MAAO,OACPC,OAAQ,SACR7B,UAAW,GACXG,QAAS,OACTC,eAAgB,WAGnB,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,KACjB,kBAAC,EAAD,CAAO3E,QAASA,KAEjB,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,YACjB,kBAAC,EAAD,CAAS3E,QAASA,EAASyD,YAAaA,MAK1C,oCACC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,KAClB,kBAAC,EAAD,WCEUC,MAlCf,WAAgB,IAAD,EACUlJ,oBAAS,GADnB,mBACNmJ,EADM,KACDC,EADC,OAEuBpJ,oBAAS,GAFhC,mBAEN4I,EAFM,KAEMS,EAFN,OAGiBrJ,mBAAS,MAH1B,mBAGNsE,EAHM,KAGGgF,EAHH,KA0Bb,OAhBA1C,qBAAU,WACNhH,EAAY2J,oBAAmB,SAACC,GAC7BA,GACDH,GAAc,GACdC,EAAW,CACTxB,YAAc0B,EAAK1B,YACnBhD,IAAI0E,EAAK1E,IACTsD,cAAgB,SAACqB,GAAD,OAASD,EAAKpB,cAAcqB,OAG5CJ,GAAc,GAEhBD,GAAQ,QAEZ,IAGA,oCACCD,EAAO,kBAAC,EAAD,CAAWpB,YAvBF,WACjB,IAAMyB,EAAO5J,EAAY8J,YACzBJ,EAAWK,OAAOC,OAAO,GAAGJ,KAqBkBlF,QAASA,EAASsE,WAAYA,IAAgB,eAC5F,kDAAyB,IAAIxD,MAAOyE,cAApC,O,MC5BJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.553e969f.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDZiXzSSDNTbcemM1rNMiDp3j3tpgwqpWw\",\r\n  authDomain: \"nwitter-65ff6.firebaseapp.com\",\r\n  databaseURL: \"https://nwitter-65ff6.firebaseio.com\",\r\n  projectId: \"nwitter-65ff6\",\r\n  storageBucket: \"nwitter-65ff6.appspot.com\",\r\n  messagingSenderId: \"539230940620\",\r\n  appId: \"1:539230940620:web:28aa01c09334a646614169\"\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();","import React,{useState} from \"react\";\r\nimport { authService } from \"fBase\";\r\n\r\nconst AuthForm =()=>{\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [newAccount, setNewAccount] = useState(true);\r\n\tconst [error, setError] = useState(\"\");\r\n\r\n\r\n\r\n    const onChange = (event) =>{\r\n\t\tconst {target:{name,value}} = event;\r\n\t\tif(name ===\"email\"){\r\n\t\t\tsetEmail(value);  \r\n\t\t}else if(name===\"password\"){\r\n\t\t\tsetPassword(value);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n    const onSubmit = async(event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tlet data;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tif(newAccount){\r\n\t\t\t\t// create NewAccount\r\n\t\t\t\tdata =await authService.createUserWithEmailAndPassword(email, password);\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email,password);\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\r\n\t\t}\r\n\t}\r\n    const toggleAccount = () =>{\r\n\t\tsetNewAccount((prev)=> !prev)\r\n\t}\r\n\r\n    return(<>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                    <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\r\n                    <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange}/>\r\n                    <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"}/>\r\n                </form>\r\n                <span onClick={toggleAccount} className=\"authSwitch\">\r\n                    {newAccount ? \"Sign in.\" : \"Create Account\"}\r\n                </span>\r\n                {error && <span className=\"authError\">{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { authService, firebaseInstance} from \"fBase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter, faGoogle, faGithub} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"component/AuthForm\";\r\n\r\nconst Auth = () =>{\r\n\r\n\tconst onSocialClick = async(event) =>{\r\n\t\tconsole.log(event.target.name);\r\n\t\tconst {\r\n\t\t\ttarget : {name},\r\n\t\t} = event;\r\n\t\tlet provider;\r\n\t\tif(name ===\"google\"){\r\n\t\t\tprovider = new firebaseInstance.auth.GoogleAuthProvider();\r\n\t\t}\r\n\t\telse if(name ===\"github\"){\r\n\t\t\tprovider = new firebaseInstance.auth.GithubAuthProvider();\r\n\t\t}\r\n\t\tawait authService.signInWithPopup(provider);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"authContainer\">\r\n\t\t<FontAwesomeIcon\r\n\t\t\ticon={faTwitter}\r\n\t\t\tcolor={\"#04AAFF\"}\r\n\t\t\tsize=\"3x\"\r\n\t\t\tstyle={{ marginBottom: 30 }}\r\n\t\t/>\r\n\t\t\t<AuthForm/>\r\n\t\t\t<div className=\"authBtns\">\r\n        \t\t<button onClick={onSocialClick} name=\"google\" className=\"authBtn\"> Continue with Google \r\n\t\t\t\t\t<FontAwesomeIcon icon={faGoogle} /> \r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github \r\n\t\t\t\t\t<FontAwesomeIcon icon={faGithub} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t</div>)\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fBase\";\r\nimport React,{useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) =>{\r\n\r\n\tconst [editing, setEditing] = useState(false);\r\n\tconst [newNweet,setNewNweet] = useState(nweetObj.text);\r\n\tconst toggleEditing = () =>{\r\n\t\tsetEditing((prev)=>!prev);\r\n\t}\r\n\r\n\r\n\tconst onDeleteClick =async() =>{\r\n\t\tconst ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n\t\tconsole.log(ok);\r\n\t\tconsole.log(\"what\");\r\n\t\tif(ok){\r\n\t\t\tawait dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\t\t\tawait storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = async(event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tawait dbService.doc(`nweets/${nweetObj.id}`).update({\r\n\t\t\ttext:newNweet,\r\n\t\t});\r\n\t\tsetEditing(false);\r\n\t}\r\n\tconst onChange = (event) =>{\r\n\t\tconst{target: {value},\r\n\t}=event;\r\n\tsetNewNweet(value);\r\n\t}\r\n\r\n\treturn(\r\n\t<div className=\"nweet\">\r\n\t\t{editing ? \r\n\t\t<div>\r\n\t\t\t<form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n\t\t\t\t<input className=\"formInput\" onChange={onChange} value={newNweet} placeholder=\"Edit your nweet\" required autoFocus/>\r\n\t\t\t\t<input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n\t\t\t</form>\r\n\t\t\t<span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            \tCancel\r\n        \t</span>\r\n\t\t</div> : (\r\n\t\t<>\r\n\t\t\t<h4>{nweetObj.text}</h4>\r\n\t\t\t{nweetObj.attachmentUrl && <img alt=\"\" src={nweetObj.attachmentUrl} />}\r\n\t\t\t{isOwner &&(\r\n\t\t\t\t<div class=\"nweet__actions\">\r\n\t\t\t\t<span onClick={onDeleteClick}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTrash} />\r\n\t\t\t\t</span>\r\n\t\t\t\t<span onClick={toggleEditing}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t\t)\r\n\t\t}\r\n\t</div>);\r\n}\r\n\r\nexport default Nweet;","import React,{useState} from \"react\";\r\nimport {dbService, storageService} from \"fBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target: {value},\r\n        }= event;\r\n        setNweet(value);\r\n    };\r\n    \r\n    const onClearAttachmentClick = () => setAttachment(\"\");\r\n    \r\n    const onFileChange =(event) =>{\r\n            const {target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) =>{\r\n            console.log(finishedEvent);\r\n            const {currentTarget:{result},\r\n        } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    \r\n    \r\n    const onSubmit = async(event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        // if there have a photo\r\n        if(attachment !==\"\"){\r\n        \r\n        const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response = await attachmentRef.putString(attachment, \"data_url\");\r\n        attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text:nweet,\r\n                createdAt: Date.now(),\r\n                userId : userObj.uid,\r\n                attachmentUrl,\r\n        }\r\n                await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n        \r\n        <input id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n            opacity: 0,\r\n            }}\r\n        />\r\n        {attachment && (\r\n            <div className=\"factoryForm__attachment\">\r\n            <img\r\n                alt=\"\"\r\n                src={attachment}\r\n                style={{\r\n                backgroundImage: attachment,\r\n            }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n        )}\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from \"fBase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Nweet from \"../component/Nweet\";\r\nimport NweetFactory from \"component/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n            const nweetArray = snapshot.docs.map((doc)=>({\r\n                id : doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        })\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                        <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.userId === userObj.uid}  />\r\n                    ))}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>(\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n            to=\"/profile\"\r\n            style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n            }}\r\n        >\r\n        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n        <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n        </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import { authService, dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default ({userObj, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            console.log(userObj.updateProfile);\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target:{value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const getMyNweets = async() =>{\r\n        const nweets = await dbService\r\n        .collection(\"nweets\")\r\n        .where(\"userId\",\"==\",userObj.uid)\r\n        .orderBy(\"createdAt\")\r\n        .get();\r\n    console.log(nweets.docs.map((doc) =>doc.data()));\r\n    console.log({userObj});\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    })\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input onChange={onChange} autoFocus  type=\"text\" placeholder=\"Display name\" value={newDisplayName} className=\"formInput\"/>\r\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n        </span>\r\n    </div>\r\n        )\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"component/Navigation\";\r\nimport Profile from \"../routes/profile\";\r\n\r\n\r\nconst AppRouter= ({refreshUser, isLoggedIn, userObj}) => {\r\n\r\n\treturn(\r\n\t\t<Router>\r\n\t\t\t{isLoggedIn && <Navigation userObj={userObj}/>}\r\n\t\t\t<Switch>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t    maxWidth: 890,\r\n\t\t\t\t    width: \"100%\",\r\n\t\t\t\t    margin: \"0 auto\",\r\n\t\t\t\t    marginTop: 80,\r\n\t\t\t\t    display: \"flex\",\r\n\t\t\t\t    justifyContent: \"center\",\r\n\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<Home  userObj={userObj}/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/Profile\">\r\n\t\t\t\t\t\t<Profile userObj={userObj} refreshUser={refreshUser}/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t):(\r\n\t\t\t\t<> \r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t<Auth/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t</Switch>\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default AppRouter;","import React,{useState, useEffect} from 'react';\nimport AppRouter from \"component/router\";\nimport {authService} from \"fBase\";\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser =() =>{\n    const user = authService.currentUser;\n    setUserObj(Object.assign({},user));\n  }\n\n  useEffect(()=>{\n      authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName : user.displayName,\n          uid:user.uid,\n          updateProfile : (args)=> user.updateProfile(args),\n        });\n        }else{\n          setIsLoggedIn(false);\n        } \n        setInit(true);\n      });\n  },[]);\n\n  return (\n    <>\n    {init ? <AppRouter refreshUser ={refreshUser} userObj={userObj} isLoggedIn={isLoggedIn}/> : \"initializing\"}\n    <footer> &copy; Nwitter {new Date().getFullYear()} </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}